#!/usr/bin/env bash

trap exit_0 INT

function exit_0() {
    exit 0
}

source "$(dirname "$0")/lib/colors.sh"

declare -a PATHS
if [[ -z "$PROJECT_PATHS" ]]; then
    PATHS=("$HOME/Documents/projects" "$HOME/workspace/projects")
else
    PATHS=( $PROJECT_PATHS )
fi

read -p "$(print_color "${YELLOW}git url: ")" REPO_URL
if [[ -z "$REPO_URL" ]]; then
    read -p "$(print_color "${YELLOW}Project name :")" PROJ_NAME
    if [[ -z $PROJ_NAME ]]; then
        exit 0
    fi
fi

selected=$({
    for path in "${PATHS[@]}"; do
        if [[ ! -d "$path" ]]; then
            continue
        fi
        find $path -mindepth 1 -maxdepth 1 -type d
    done
} | sort -u | fzf --layout=reverse --height=50 --border=rounded --border-label="Choose location")


if [[ -z "$selected" ]]; then
    print_color "${RED}No path was chosen"
    print_color "A path is needed for cloning the repo ${BLUE}$REPO_URL"
    printf "For tmux-sessionizer select path in one of\n"
    for path in "${PATHS[@]}"; do
        if [[ ! -d "$path" ]]; then
            continue
        fi
        print_color  "    ${LIGHT_BLUE}- $path"
    done
    read -e -p "$(print_color  "${YELLOW}Enter path: ")" selected
    if [[ -z "$selected" ]]; then
        exit 0
    fi
    selected=$(eval echo $selected)
    if [[ ! -d "$selected" ]]; then
        mkdir -p "$selected"
    fi
fi

cd $selected

if [[ ! -z "$REPO_URL" ]]; then
    git clone-bare $REPO_URL
    repo_name=${REPO_URL##*/}
    tmux-sessionizer "$selected/$repo_name"
fi

if [[ ! -z "$PROJ_NAME" ]]; then
    mkdir "$PROJ_NAME"
    cd "$PROJ_NAME"
    git init --initial-branch=main
    tmux-sessionizer "$selected/$PROJ_NAME"
fi
